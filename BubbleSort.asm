; BUBBLE SORT IN ASSEMBLY LANGUAGE. 
; INPUT TEN NUMBERS THAT ARE ALL LESS THAN 10 BY KEYBOARD, THEN BUBBLE SORT
; THEM AND DISPLAY THE RESULT ON THE SCREEN.

DATA 	SEGMENT
TABLE	DB	10	DUP(0)		; BUILD A TEN NUMBER TABLE TO LOAD INPUT NUMBERS
DATA 	ENDS


CODE	SEGMENT
ASSUME	CS:CODE,DS:DATA

START:	MOV AX,DATA
		MOV DS,AX
		LEA SI,TABLE		; GET THE FIRST ADDRESS OF TABLE 
		MOV CX,10			; SET A 10 COUNTER
		
INPUT:	MOV AH,01H			; INPUT
		INT 21H				; NUMBERS
		MOV [SI],AL			; MOVE INPUTED NUMBER INTO TABLE
		INC SI				; POINTER INCREASE
		LOOP INPUT			; CONTINUE INPUTING UNTIL TABLE IS FILLED WITH 10 NUMBERS
		
		MOV AH,02H			; DISPLAY ON SCREEN
		MOV DL,0DH			; DISPLAY ENTER KEY
		INT 21H
		MOV DL,0AH			; DISPLAY IN DEC.
		INT 21H

		MOV CX,9			; COMPARE 9 TIMES
AGAIN1:	MOV BX,CX			; PROTECT CX 
		MOV SI,0			; SET POINTER AT THE FIRST ELEMENT 
AGAIN2:	MOV AL,TABLE[SI]	; MOVE TABLE[0] TO AL
        CMP AL,TABLE[SI+1]	; COMPARE TABLE[0] AND TABLE[1]
        JLE AGAIN3			; IF TABLE[0] IS LESS THAN TABLE[1], JUMP TO AGAIN3
        XCHG AL,TABLE[SI+1]	; OTHERWISE EXCHANGE AL AND TABLE[1] TO GET LESS ONE IN AL
        MOV [SI],AL			; PUT THE LESS ONE BETWEEN THE FIRST AND SECOND TO THE TABLE[0]
AGAIN3:	INC SI				; TABLE[0]<TABLE[1], THEN PUT POINTER TO THE NEXT ONE
        LOOP AGAIN2			; LOOP TO COMPARE TABLE[1] AND TABLE[2]
        MOV CX,BX			; POP CX TO COUNT
        LOOP AGAIN1			; CX-1 AND LOOP AGAIN1

        MOV CX,10			; SET A COUNT TO OUTPUT THE SORTED NUMBER 
        LEA SI,TABLE		; OBTAIN THE EFFECTIVE ADDRESS OF TABLE
AGAIN4:	MOV AH,02H			; DISPLAY THE NUMBER OF DL ON THE SCREEN 
        MOV DL,TABLE[SI]	; LOAD TABLE[0] IN DL
        INT 21H
        INC SI				; MOVE POINTER TO TABLE[1]
        LOOP AGAIN4			; LOOP 10 TIMES TO OUTPUT ALL THE NUMBERS IN TABLE

CODE    ENDS
        END START